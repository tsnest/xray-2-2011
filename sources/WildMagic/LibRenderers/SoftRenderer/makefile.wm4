CFLAGS := -c
ARFLAGS := rs
INCPATH := -I . -I ./Wmsp -I ../../SDK/Include
INCDIR := ../../SDK/Include

ifeq (linux,$(findstring linux,$(SYS)))
CC := /usr/bin/g++
GCC := /usr/bin/gcc
EGL := XSoft
AR := /usr/bin/ar
INCPATH += -I /usr/X11R6/include
endif

ifeq (mingw,$(findstring mingw,$(SYS)))
CC := /mingw/bin/g++
GCC := /mingw/bin/gcc
EGL := WinSoft
AR := /mingw/bin/ar
INCPATH += -I /mingw/include
endif

ifeq (cygwin,$(findstring cygwin,$(SYS)))
CC := /usr/bin/g++
GCC := /usr/bin/gcc
EGL := WinSoft
AR := /usr/bin/ar
INCPATH += -I /usr/include
endif

ifeq (sgi,$(findstring sgi,$(SYS)))
CC := /usr/freeware/bin/g++
GCC := /usr/freeware/bin/gcc
EGL := XSoft
AR := /usr/bin/ar
INCPATH += -I /usr/X11R6/include
endif

ifeq (Debug,$(findstring Debug,$(CFG)))
CFLAGS += -g -D_DEBUG
else
CFLAGS += -O2 -DNDEBUG
endif

ifeq (Memory,$(findstring Memory,$(CFG)))
CFLAGS += -DWM4_MEMORY_MANAGER
endif

INC := $(wildcard Wm4Soft*.h) $(wildcard Wm4Soft*.inl) $(wildcard Wm4$(EGL)*.h)
INC := $(notdir $(INC))
SRC := $(wildcard Wm4Soft*.cpp) $(wildcard Wm4$(EGL)*.cpp) WmspWrapper.cpp
SRC := $(notdir $(SRC))
OBJ := $(SRC:%.cpp=$(CFG)/%.o) $(SRC:%.c=$(CFG)/%.o)
LIB := ../../SDK/Library/$(CFG)/libWm4SoftRenderer.a

build : $(OBJ)
	$(AR) $(ARFLAGS) $(LIB) $(CFG)/*.o
	cp -fp $(INC) $(INCDIR)

$(CFG)/%.o : %.cpp
	@mkdir -p $(CFG)
	$(CC) $(INCPATH) $(CFLAGS) $< -o $@

$(CFG)/%.o : %.c
	@mkdir -p $(CFG)
	$(GCC) $(INCPATH) $(CFLAGS) $< -o $@

clean :
	rm -f $(CFG)/*.o
