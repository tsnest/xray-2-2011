// Software vertex shader generated by Wild Magic.
//
// var float3   kModelPosition $vin.POSITION
// var float4   kModelColor    $vin.COLOR
// var float2   kModelTCoord   $vin.TEXCOORD0
// var float4   kClipPosition  $vout.POSITION
// var float4   kVertexColor   $vout.COLOR
// var float2   kTCoord        $vout.TEXCOORD0
// var float4x4 WVPMatrix      c[0]

#include "Wm4SoftRenderer.h"
#include "Wm4Matrix4.h"
#include "Wm4Vector2.h"
#include "Wm4ColorRGBA.h"

namespace Wm4
{

void v_VolumeFog (const float* afRegister, const float* afInVertex,
    float* afOutVertex)
{
    // Get the register items.
    const Matrix4f& rkWVPMatrix = *(const Matrix4f*)&afRegister[0];

    // Get the input items.
    Vector4f kModelPosition(afInVertex[0],afInVertex[1],afInVertex[2],1.0f);
    const ColorRGBA& rkModelColor = *(const ColorRGBA*)&afInVertex[3];
    const Vector2f& rkModelTCoord = *(const Vector2f*)&afInVertex[7];

    // Access the output items.
    Vector4f& rkClipPosition = *(Vector4f*)&afOutVertex[0];
    ColorRGBA& rkVertexColor = *(ColorRGBA*)&afOutVertex[4];
    Vector2f& rkTCoord = *(Vector2f*)&afOutVertex[8];

    // *** program ***

    // Transform the position from model space to clip space.
    rkClipPosition = kModelPosition*rkWVPMatrix;

    // Pass through the vertex color and texture coordinate.
    rkVertexColor = rkModelColor;
    rkTCoord = rkModelTCoord;
}

WM4_IMPLEMENT_VPROGRAM(VolumeFog);
WM4_REGISTER_VPROGRAM(VolumeFog);

}
