////////////////////////////////////////////////////////////////////////////
//	Created		: 22.06.2010
//	Author		: Nikolay Partas
//	Copyright (C) GSC Game World - 2010
////////////////////////////////////////////////////////////////////////////

#include "pch.h"
#include "benchmark_helpers.h"

namespace xray { 
namespace graphics_benchmark {


std::string file_to_string(char const* file_name, bool& out_valid_file)
{
	std::string result;
	FILE* file = fopen(file_name,"r");

	out_valid_file = file != NULL;
	
	if (!out_valid_file)
		return "";

	fseek(file,0,SEEK_END);
	size_t file_size = ftell(file);
	fseek(file,0,SEEK_SET);
	result.resize(file_size);
	
	char* temp = NEW_ARRAY(char,file_size+1);
	temp[file_size] = 0;

	fread(temp,1,file_size,file);
	fclose(file);

	result = temp;
	
	DELETE_ARRAY(temp);

	return result;
}

DXGI_FORMAT get_dxgi_format(std::string const& name)
{
#define RETURN_IF_EQUAL_TO(type) if (name==#type) return type;

		RETURN_IF_EQUAL_TO( DXGI_FORMAT_UNKNOWN )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32A32_TYPELESS )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32A32_FLOAT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32A32_UINT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32A32_SINT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32_TYPELESS )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32_FLOAT	)
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32_UINT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32B32_SINT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16B16A16_TYPELESS )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16B16A16_FLOAT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16B16A16_UNORM )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16B16A16_UINT )
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16B16A16_SNORM )         
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16B16A16_SINT )   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32_TYPELESS )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32_FLOAT )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32_UINT )                 
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G32_SINT )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32G8X24_TYPELESS )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_D32_FLOAT_S8X24_UINT )        
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32_FLOAT_X8X24_TYPELESS )    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_X32_TYPELESS_G8X24_UINT )     
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R10G10B10A2_TYPELESS )        
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R10G10B10A2_UNORM )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R10G10B10A2_UINT )            
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R11G11B10_FLOAT )             
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8B8A8_TYPELESS )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8B8A8_UNORM )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8B8A8_UNORM_SRGB )         
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8B8A8_UINT )               
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8B8A8_SNORM )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8B8A8_SINT )               
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16_TYPELESS )             
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16_FLOAT )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16_UNORM )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16_UINT )                 
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16_SNORM )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16G16_SINT )                 
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_D32_FLOAT )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32_FLOAT )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32_UINT )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R32_SINT )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R24G8_TYPELESS )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_D24_UNORM_S8_UINT )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R24_UNORM_X8_TYPELESS )       
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_X24_TYPELESS_G8_UINT )        
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8_TYPELESS )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8_UNORM )                  
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8_UINT )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8_SNORM )                  
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8_SINT )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16_FLOAT )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_D16_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16_UINT )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16_SNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R16_SINT )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8_TYPELESS )                 
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8_UNORM )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8_UINT )                     
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8_SNORM )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8_SINT )                     
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_A8_UNORM )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R1_UNORM )                    
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R9G9B9E5_SHAREDEXP )          
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R8G8_B8G8_UNORM )             
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_G8R8_G8B8_UNORM )             
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC1_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC1_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC1_UNORM_SRGB )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC2_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC2_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC2_UNORM_SRGB )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC3_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC3_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC3_UNORM_SRGB )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC4_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC4_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC4_SNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC5_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC5_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC5_SNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B5G6R5_UNORM )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B5G5R5A1_UNORM )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B8G8R8A8_UNORM )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B8G8R8X8_UNORM )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_R10G10B10_XR_BIAS_A2_UNORM )  
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B8G8R8A8_TYPELESS )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B8G8R8A8_UNORM_SRGB )         
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B8G8R8X8_TYPELESS )           
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_B8G8R8X8_UNORM_SRGB )         
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC6H_TYPELESS )               
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC6H_UF16 )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC6H_SF16 )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC7_TYPELESS )                
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC7_UNORM )                   
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_BC7_UNORM_SRGB )              
		RETURN_IF_EQUAL_TO( DXGI_FORMAT_FORCE_UINT )

		return DXGI_FORMAT_UNKNOWN;
}

} // namespace graphics_benchmark
} // namespace xray