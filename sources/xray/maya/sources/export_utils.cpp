////////////////////////////////////////////////////////////////////////////
//	Created		: 28.10.2010
//	Author		: Konstantin Slipchenko
//	Copyright (C) GSC Game World - 2010
////////////////////////////////////////////////////////////////////////////

#include "pch.h"
#include "export_utils.h"

MString file_name_from_args( const MArgDatabase &argData, MStatus *status )
{

	MString				file_name;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	MString	error_str;																			////////////////////////
	if( !argData.isFlagSet( file_name_flag_l ) )												////////////////////////
	{																							////////////////////////
		error_str				= "output file name flag (";									////////////////////////
		error_str				+= file_name_flag_l;											////////////////////////
		error_str				+= ") not specified";											////////////////////////
																								////////////////////////
		display_warning	(error_str);
		if( status )
			*status = MStatus::kFailure;														////////////////////////
		return					"";																////////////////////////
	}																							////////////////////////
																								////////////////////////
	MStatus result				= argData.getFlagArgument( file_name_flag_l, 0, file_name );	////////////////////////

	if( status )
		*status = result;

	return file_name;																				////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
}


MStatus check_claster_joints( const MSelectionList &all_joints )
{
	MStatus	status;	
	int length = all_joints.length		( &status ); CHK_STAT_R( status );

	if( length == 0 )
	{
		display_warning( "No joints found! Check claster selected!" );
		return MStatus::kFailure; 
	}
	return status;
}


